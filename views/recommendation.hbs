<script>
    // save every state before leaving
    let url = window.location.href.split('/')
    let songId = url[url.length - 1]
    window.addEventListener("beforeunload", function (event) {
        setCookie("haveBeen_" + songId, true)
        setCookie("randomTracks25_" + songId, JSON.stringify(randomTracks25))
        setCookie("randomTracks75_" + songId, JSON.stringify(randomTracks75))
        setCookie("randomName_" + songId, JSON.stringify(randomName))
        setCookie("currentScore_" + songId, currentScore)
        setCookie("recommendationArray_" + songId, JSON.stringify(recommendationArray))
        setCookie("arrayIndex_" + songId, arrayIndex)
        setCookie("currentStep_" + songId, currentStep)
        setCookie("startRandomFrom_" + songId, startRandomFrom)
        setCookie("yesAnswerCount_" + songId, yesAnswerCount)
        setCookie("noAnswerCount_" + songId, noAnswerCount)
        setCookie("playlist_" + songId, JSON.stringify(playlist))
        if (currentStep == 4) {
            if (validateForm(false)) {
                return false
            }
            else {
                // Cancel the event
                event.preventDefault();
                // Chrome requires returnValue to be set
                event.returnValue = '';
            }
        }
        else
            return false
    });
</script>

<div class="container">
    <!-- Modal -->
    <div class="modal fade" id="alertModel" tabindex="-1" role="dialog" aria-labelledby="exampleModalCenterTitle"
        aria-hidden="true">
        <div class="modal-dialog modal-dialog-centered modal-dialog-scrollable" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="exampleModalLongTitle">Ooops!</h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body">
                    <p class="lead">
                        Please answer all questions.
                        <br>
                        <span id="wariningText" class="text-success">

                        </span>
                    </p>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-success" data-dismiss="modal">Close</button>
                </div>
            </div>
        </div>
    </div>

    <!-- group member -->
    <div id="step0" style="display: none">
        <div class="text-center py-3">
            <span style="font-size: 38px" class="lead text-bold text-success">
                Group <span class="text-dark">
                    Members</span>
            </span>
            <footer align="left" class="lead text-muted">Based on the reference song you chose, we found the following
                people with a similar taste.
            </footer>
        </div>
        <ul class="list-group list-group-flush">
            {{#each (jsonToObj users)}}
            <li class="list-group-item lead pl-4">{{this}}</li>
            {{/each}}
        </ul>
        <div class="pt-3">
            <button id="nextStep0" onclick="nextStep()" class="btn-block btn-lg btn-outline-primary">Next
                Step
            </button>
        </div>
    </div>

    {{!-- Step1 --}}
    <div class="pt-2 pb-3 d-flex bd-highlight">
        <div id="step1" style="display: none" class="p-2 flex-grow-1 bd-highlight">
            <div class="text-center pb-3">
                <span style="font-size: 38px" class="text-success">
                    Candidate <span style="font-size: 38px" class="lead text-dark">
                        Song</span>
                </span>
                <footer align="left" class="lead text-muted">Below you will find a candidate song for the playlist. This
                    song is chosen based on your reference song that you chose before and the fitness with your fellow
                    group members. Indicate for the song below to what extent you would like to have this song added to
                    the playlist. Responses of you and your group members will be initially shown
                    <b><u>anonymously</u></b> in the next step.
                </footer>
            </div>
            <div>
                <div class="card">
                    <div class="card-body">
                        <div class="text-center">
                            <img id="img" style="border-radius: 50%; height: 250px">
                            <footer class="pt-2">
                                <div id="player">
                                    <audio controls class="embed-responsive-item">
                                        <source>
                                    </audio>
                                </div>

                            </footer>
                        </div>
                        <ul style="display:none" class="pt-3 list-group list-group-flush">
                            <li class="list-group-item">
                                <a class="text-muted">Track ID:</a>
                                <footer><a id="trackId" class="text-reset lead"></a></footer>
                            </li>
                        </ul>
                        <ul class="pt-3 list-group list-group-flush">
                            <li class="list-group-item">
                                <a class="text-muted">Song name:</a>
                                <footer><a id="trackName" class="text-reset lead"></a></footer>
                            </li>
                        </ul>
                        <ul class="list-group list-group-flush">
                            <li class="list-group-item">
                                <a class="text-muted">Artist name:</a>
                                <footer><a id="artistName" class="text-reset lead"></a></footer>
                            </li>
                        </ul>
                        <ul class="list-group list-group-flush">
                            <li class="list-group-item">
                                <div>
                                    <a class="text-reset lead">Do you know this artist?</a>
                                    <footer class="pt-2">
                                        <div class="row">
                                            <div class="pl-3">
                                                <button id="artistYes" type="button" class="btn btn-outline-success"
                                                    onclick="knowArtist(1)">
                                                    <i class="far fa-laugh-beam fa-lg"></i> Yes
                                                </button>
                                            </div>
                                            <div class="pl-3">
                                                <button id="artistNo" type="button" class="btn btn-outline-danger"
                                                    onclick="knowArtist(0)">
                                                    <i class="far fa-frown fa-lg"></i> No
                                                </button>
                                            </div>
                                        </div>
                                    </footer>
                                </div>
                            </li>
                        </ul>
                        <ul class="list-group list-group-flush">
                            <li class="list-group-item">
                                <div>
                                    <a class="text-reset lead">Do you know this song?</a>
                                    <footer class="pt-2">
                                        <div class="row">
                                            <div class="pl-3">
                                                <button id="songYes" type="button" class="btn btn-outline-success"
                                                    onclick="knowSong(1)">
                                                    <i class="far fa-laugh-beam fa-lg"></i> Yes
                                                </button>
                                            </div>
                                            <div class="pl-3">
                                                <button id="songNo" type="button" class="btn btn-outline-danger"
                                                    onclick="knowSong(0)">
                                                    <i class="far fa-frown fa-lg"></i> No
                                                </button>
                                            </div>
                                        </div>
                                    </footer>
                                </div>
                            </li>
                        </ul>
                        <ul class="list-group list-group-flush">
                            <li class="list-group-item">
                                <div>
                                    <a class="text-reset lead">Would you like this song to be added to the playlist?</a>
                                    <footer class="pt-2">
                                        <div class="row">
                                            <div class="pl-3">
                                                <button id="answer4" onclick="vote(4)" class="btn btn-outline-success">
                                                    <i class="far fa-laugh-beam fa-lg"></i> Yes
                                                </button>
                                            </div>
                                            <div class="pl-3">
                                                <button id="answer3" onclick="vote(3)" class="btn btn-outline-info">
                                                    <i class="far fa-smile-wink fa-lg"></i> Maybe Yes
                                                </button>
                                            </div>
                                            <div class="pl-3">
                                                <button id="answer2" onclick="vote(2)"
                                                    class="btn btn-outline-secondary">
                                                    <i class="far fa-meh fa-lg"></i> Maybe No
                                                </button>
                                            </div>
                                            <div class="pl-3">
                                                <button id="answer1" onclick="vote(1)" class="btn btn-outline-danger">
                                                    <i class="far fa-frown fa-lg"></i> No
                                                </button>
                                            </div>
                                        </div>
                                    </footer>
                                </div>
                            </li>
                        </ul>
                        <div class="pt-3">
                            <button id="nextStep1" onclick="nextStep()"
                                class="btn-block btn-lg btn-outline-primary">Next
                                Step
                            </button>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        {{!-- Step2 --}}
        <div id="step2" class="p-2 flex-grow-1 bd-highlight" style="display: none">
            <div class="px-5">
                <div class="text-center pb-3" id="firstHeaderText">
                    <span style="font-size: 38px" class="text-success">
                        Anonymous <span style="font-size: 38px" class="lead text-dark">
                            Group Responses</span>
                    </span>
                    <footer align="left" class="lead text-muted">The initial responses of your group members are shown
                        here. In this stage the names of <b><u>all</u></b> group members are anonymized. You are allowed
                        to
                        change your opinion on this song for the playlist. The names and responses of all group members
                        will be revealed when the final decision has been made in the next step.
                        <br>
                        <b>Remember that an unanimous positive (i.e., "yes" or "maybe yes") decision need to be reached
                            before a song will be added to the playlist.</b>
                    </footer>
                </div>
                <ul class="list-group list-group-flush">
                    <li class="list-group-item d-flex justify-content-between align-items-center">
                        <span class="lead">Group Member </span>
                        <div id="userAnswer1">

                        </div>
                    </li>
                    <li class="list-group-item d-flex justify-content-between align-items-center">
                        <span class="lead">Group Member </span>
                        <div id="userAnswer2">

                        </div>
                    </li>
                    <li class="list-group-item d-flex justify-content-between align-items-center">
                        <span class="lead">Group Member </span>
                        <div id="userAnswer3">

                        </div>
                    </li>
                    <li class="list-group-item d-flex justify-content-between align-items-center">
                        <span class="lead">Group Member </span>
                        <div id="userAnswer4">

                        </div>
                    </li>

                    <li class="list-group-item">
                        <div id="repeatAnswer">
                            <a class="lead">
                                Please make your final judgment on this song. <br>
                                Would you like this song to be added to the playlist?
                            </a>
                            <footer class="pt-2">
                                <div class="row">
                                    <div class="pl-3">
                                        <button id="repeatAnswer4" onclick="finalVote(4)"
                                            class="btn btn-outline-success">
                                            <i class="far fa-laugh-beam fa-lg"></i> Yes
                                        </button>
                                    </div>
                                    <div class="pl-3">
                                        <button id="repeatAnswer3" onclick="finalVote(3)" class="btn btn-outline-info">
                                            <i class="far fa-smile-wink fa-lg"></i> Maybe Yes
                                        </button>
                                    </div>
                                    <div class="pl-3">
                                        <button id="repeatAnswer2" onclick="finalVote(2)"
                                            class="btn btn-outline-secondary">
                                            <i class="far fa-meh fa-lg"></i> Maybe No
                                        </button>
                                    </div>
                                    <div class="pl-3">
                                        <button id="repeatAnswer1" onclick="finalVote(1)"
                                            class="btn btn-outline-danger">
                                            <i class="far fa-frown fa-lg"></i> No
                                        </button>
                                    </div>
                                </div>
                            </footer>
                        </div>
                    <li class="list-group-item">
                        <button id="nextStep2" onclick="nextStep()" class="btn-block btn-lg btn-outline-primary">Next
                            Step
                        </button>
                    </li>
                </ul>
            </div>
        </div>

        {{!-- Step3 --}}
        <div id="step3" class="p-2 flex-grow-1 bd-highlight" style="display: none">
            <div class="px-5">
                <div class="text-center pb-3" id="secondHeaderText">
                    <span style="font-size: 38px" class="text-success">
                        Final <span style="font-size: 38px" class="lead text-dark">
                            Group Responses</span>
                    </span>
                    <footer align="left" class="lead text-muted">The final decision has been made! The names and
                        responses of all the group members are shown below.
                    </footer>
                </div>
                <ul class="list-group list-group-flush">
                    <li class="list-group-item d-flex justify-content-between align-items-center">
                        <span id="userName1" class="lead"> </span>
                        <div id="userFinalAnswer1">

                        </div>
                    </li>
                    <li class="list-group-item d-flex justify-content-between align-items-center">
                        <span id="userName2" class="lead"> </span>
                        <div id="userFinalAnswer2">

                        </div>
                    </li>
                    <li class="list-group-item d-flex justify-content-between align-items-center">
                        <span id="userName3" class="lead"> </span>
                        <div id="userFinalAnswer3">

                        </div>
                    </li>
                    <li class="list-group-item d-flex justify-content-between align-items-center">
                        <span id="userName4" class="lead"> </span>
                        <div id="userFinalAnswer4">

                        </div>
                    </li>

                    <li class="list-group-item">
                        <div id="yourAnswer">
                            <div class=" border rounded d-flex justify-content-between">
                                <p class="lead mx-2 mt-3">
                                    <b>Your final choice is</b>
                                </p>
                                <footer id="yourAnswerBtn" class="mx-2 pt-2 mb-2">

                                </footer>
                            </div>
                            <div id="statusAlert" class="pt-3">

                            </div>

                        </div>

                    <li class="list-group-item">
                        <button id="nextStep3" onclick="nextStep()" class="btn-block btn-lg btn-outline-primary">Next
                            Step
                        </button>
                    </li>
                </ul>
            </div>
        </div>

        {{!-- Playlist --}}
        <div id="playlist" style="display: none" class="p-2 bd-highlight">
            <div class="card" style="width: 20rem;">
                <li class="list-group-item active text-center">Playlist</li>
                <ul class="list-group list-group-flush">
                    <li id="track1" class="list-group-item">1.</li>
                    <li id="track2" class="list-group-item">2.</li>
                    <li id="track3" class="list-group-item">3.</li>
                    <li id="track4" class="list-group-item">4.</li>
                    <li id="track5" class="list-group-item">5.</li>
                    <li id="track6" class="list-group-item">6.</li>
                    <li id="track7" class="list-group-item">7.</li>
                    <li id="track8" class="list-group-item">8.</li>
                    <li id="track9" class="list-group-item">9.</li>
                    <li id="track10" class="list-group-item">10.</li>
                </ul>
            </div>
            <button style="display: none" id="addUserPlaylist" class="mt-3 btn-block btn-lg btn-outline-success"
                onclick="showSavePlaylist()">Save playlist
            </button>
        </div>

        <div class="modal fade" id="exampleModalCenter" tabindex="-1" role="dialog"
            aria-labelledby="exampleModalCenterTitle" aria-hidden="true">
            <div class="modal-dialog" role="document">
                <div class="modal-content">
                    <div class="modal-header">
                        <h5 class="modal-title" id="exampleModalCenterTitle">Save playlist</h5>
                        <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                            <span aria-hidden="true">&times;</span>
                        </button>
                    </div>
                    <div class="modal-body">
                        <div class="form-group lead">
                            <label class="text-success" for="inputAge">Playlist name</label>
                            <input name="playlistName" id="playlistName" class="form-control"
                                placeholder="Playlist name">
                            <div class="invalid-feedback">
                                Please input a playlist name.
                            </div>
                        </div>
                        <div class="form-group lead">
                            <label class="text-success" for="inputAge">Description (optional)</label>
                            <input name="playlistDescription" id="playlistDescription" class="form-control"
                                placeholder="Playlist description">
                        </div>
                        <div class="custom-control custom-checkbox">
                            <input checked type="checkbox" name="playlistPublic" class="custom-control-input"
                                id="playlistPublic">
                            <label class="custom-control-label" for="playlistPublic">Public playlist</label>
                        </div>
                    </div>
                    <div class="modal-footer">
                        <button type="button" id="saveButton" onclick="addUserPlaylist()" class="btn btn-success">
                            <span id="saveButtonText">
                                Save
                            </span>
                            <span style="display:none" id="savePlaylistLoading" class="spinner-grow spinner-grow-sm"
                                role="status" aria-hidden="true"></span>
                        </button>
                    </div>
                </div>
            </div>
        </div>
    </div>

    {{!-- Step4 --}}

    <div id="step4" class="border shadow" style="display: none">
        <div class="text-center pt-2 px-5">
            <span style="font-size: 38px" class="lead text-bold text-success">
                Survey <span class="text-dark">
                    Questions</span>
            </span>
            <footer align="left" class="lead text-muted">Note: Survey questions
            </footer>
        </div>
        <small class="px-5 text-muted">
            1 = Disagree strongly,
            2 = Disagree,
            3 = Neither agree nor disagree,
            4 = Agree,
            5 = Agree strongly
        </small>
        <div class="px-5">
            <hr>
        </div>
        <form onsubmit="return validateForm()" name="formQuestion" action="/surveys" method="POST">
            <div class="px-5">
                {{#each (jsonToObj surveys)}}
                {{#ifCond @index '!=' 28}}
                <span id="questionText_{{inc @index}}" class="text-success lead">
                    {{inc @index}}. {{this}}
                </span>
                <div class="pt-2">
                    <div>
                        <div class="custom-control custom-radio custom-control-inline">
                            <input value="1" type="radio" id="radio{{@index}}-1" name="q_{{inc @index}}"
                                class="custom-control-input">
                            <label class="custom-control-label" for="radio{{@index}}-1">1</label>
                        </div>
                        <div class="custom-control custom-radio custom-control-inline ml-2">
                            <input value="2" type="radio" id="radio{{@index}}-2" name="q_{{inc @index}}"
                                class="custom-control-input">
                            <label class="custom-control-label" for="radio{{@index}}-2">2</label>
                        </div>
                        <div class="custom-control custom-radio custom-control-inline ml-2">
                            <input value="3" type="radio" id="radio{{@index}}-3" name="q_{{inc @index}}"
                                class="custom-control-input">
                            <label class="custom-control-label" for="radio{{@index}}-3">3</label>
                        </div>
                        <div class="custom-control custom-radio custom-control-inline ml-2">
                            <input value="4" type="radio" id="radio{{@index}}-4" name="q_{{inc @index}}"
                                class="custom-control-input">
                            <label class="custom-control-label" for="radio{{@index}}-4">4</label>
                        </div>
                        <div class="custom-control custom-radio custom-control-inline ml-2">
                            <input value="5" type="radio" id="radio{{@index}}-5" name="q_{{inc @index}}"
                                class="custom-control-input">
                            <label class="custom-control-label" for="radio{{@index}}-5">5</label>
                        </div>
                    </div>
                </div>
                {{else}}
                <span id="questionText_{{inc @index}}" class="text-success lead">
                    {{inc @index}}. {{this}}
                </span>
                <div class="pt-2">
                    <div>
                        <div class="custom-control custom-radio custom-control-inline col-md-5">
                            <input value="1" type="radio" id="radio{{@index}}-1" name="q_{{inc @index}}"
                                class="custom-control-input">
                            <label class="custom-control-label" for="radio{{@index}}-1">
                                <img src="/images/1.png" class="rounded h-75" alt="...">
                            </label>
                        </div>
                        <div class="custom-control custom-radio custom-control-inline col-md-5">
                            <input value="2" type="radio" id="radio{{@index}}-2" name="q_{{inc @index}}"
                                class="custom-control-input">
                            <label class="custom-control-label" for="radio{{@index}}-2">
                                <img src="/images/2.png" class="rounded h-75" alt="...">
                            </label>
                        </div>
                        <div class="custom-control custom-radio custom-control-inline col-md-5">
                            <input value="3" type="radio" id="radio{{@index}}-3" name="q_{{inc @index}}"
                                class="custom-control-input">
                            <label class="custom-control-label" for="radio{{@index}}-3">
                                <img src="/images/3.png" class="rounded h-75" alt="...">
                            </label>
                        </div>
                        <div class="custom-control custom-radio custom-control-inline col-md-5">
                            <input value="4" type="radio" id="radio{{@index}}-4" name="q_{{inc @index}}"
                                class="custom-control-input">
                            <label class="custom-control-label" for="radio{{@index}}-4">
                                <img src="/images/4.png" class="rounded h-75" alt="...">
                            </label>
                        </div>
                        <div class="custom-control custom-radio custom-control-inline col-md-5">
                            <input value="5" type="radio" id="radio{{@index}}-5" name="q_{{inc @index}}"
                                class="custom-control-input">
                            <label class="custom-control-label" for="radio{{@index}}-5">
                                <img src="/images/5.png" class="rounded h-75" alt="...">
                            </label>
                        </div>
                        <div class="custom-control custom-radio custom-control-inline col-md-5">
                            <input value="6" type="radio" id="radio{{@index}}-6" name="q_{{inc @index}}"
                                class="custom-control-input">
                            <label class="custom-control-label" for="radio{{@index}}-6">
                                <img src="/images/6.png" class="rounded h-75" alt="...">
                            </label>
                        </div>
                        <div class="custom-control custom-radio custom-control-inline col-md-5">
                            <input value="7" type="radio" id="radio{{@index}}-7" name="q_{{inc @index}}"
                                class="custom-control-input">
                            <label class="custom-control-label" for="radio{{@index}}-7">
                                <img src="/images/7.png" class="rounded h-75" alt="...">
                            </label>
                        </div>
                    </div>
                </div>
                {{/ifCond}}

                <hr>
                {{/each}}
            </div>
            <button id="nextStep4" type="submit" class="btn-block btn-lg btn btn-success">Finish</button>
        </form>

    </div>
</div>

{{!-- Loading --}}
<div id="loading" class="text-center" style="padding-top: 20%; display: none">
</div>

</div>

<script>

    let PLAYLIST_MAX = 2

    function showTrackById(trackId) {
        recommendationArray[arrayIndex].track_id = trackId
        recommendationArray[arrayIndex].user_id = user_id
        $.ajax({
            url: 'https://api.spotify.com/v1/tracks/' + trackId,
            headers: {
                'Authorization': 'Bearer ' + access_token
            },
            success: function (response) {
                $("#img").attr("src", response.album.images[0].url);
                $("#player").html('')
                $("#player").html("<audio controls src=" + response.preview_url + " class='embed-responsive-item'>  <source> </audio>")
                $("#trackId").text(response.id)
                $("#trackName").text(response.name)
                $("#artistName").text(response.artists[0].name)
                $("#step1").show();
                // remove all active buttons
                $("#artistYes").removeClass("active");
                $("#artistNo").removeClass("active");
                $("#songYes").removeClass("active");
                $("#songNo").removeClass("active");
                $("#answer1").removeClass("active")
                $("#answer2").removeClass("active")
                $("#answer3").removeClass("active")
                $("#answer4").removeClass("active")
                $("#repeatAnswer1").removeClass("active")
                $("#repeatAnswer2").removeClass("active")
                $("#repeatAnswer3").removeClass("active")
                $("#repeatAnswer4").removeClass("active")
                currentStep = 1
            }
        })
    }

    function shuffle(array) {
        for (let i = array.length; i > 1; i--) {
            let r = Math.floor(Math.random() * i);
            let temp = array[r];
            array[r] = array[i - 1];
            array[i - 1] = temp;
        }
    }

    let access_token = getCookie('access_token')
    let user_id = getCookie('user_id')
    let haveBeen = (getCookie("haveBeen_" + songId))
    let randomTracks25 = haveBeen ? JSON.parse(getCookie('randomTracks25_' + songId)) : {{{ randomTracks25 }}}
    let randomTracks75 = haveBeen ? JSON.parse(getCookie('randomTracks75_' + songId)) : {{{ randomTracks75 }}}
    let randomName = haveBeen ? JSON.parse(getCookie('randomName_' + songId)) : {{{ users }}}
    let currentScore = haveBeen ? getCookie('currentScore_' + songId) : 0
    // shuffle track arrays if not have been here before
    if (!haveBeen) {
        shuffle(randomTracks25)
        shuffle(randomTracks75)
    }
    let recommendationArray = haveBeen ? JSON.parse(getCookie('recommendationArray_' + songId)) : [] // data for sending to server by using jQuery POST
    let arrayIndex = haveBeen ? getCookie('arrayIndex_' + songId) : 0 // index for pushing to recommendationArray
    let currentStep = haveBeen ? getCookie('currentStep_' + songId) : 0
    // let currentStep = 4
    let startRandomFrom = haveBeen ? getCookie('startRandomFrom_' + songId) : ""
    let yesAnswerCount = haveBeen ? getCookie('yesAnswerCount_' + songId) : 0
    let noAnswerCount = haveBeen ? getCookie('noAnswerCount_' + songId) : 0
    let playlist = haveBeen ? JSON.parse(getCookie('playlist_' + songId)) : []
    // initialize playlist
    for (let index = 0; index < playlist.length; index++) {
        $("#track" + (index + 1)).html(`<span>${index + 1}. </span><a class="text-success">${playlist[index].trackName}</a><footer class="blockquote-footer"> ${playlist[index].artistName}</footer>`)
    }
    if (currentStep == 0) {
        recommendationArray[arrayIndex] = {}
        hideAllSteps() // hide every step first
        showLoading("Looking for group members")
        let min = 2,
            max = 5;
        // generate Random number between 5-10
        let rand = Math.floor(Math.random() * (max - min + 1) + min);
        setTimeout(showGroupMembers, rand * 1000);
    }
    else if (currentStep == 1) {
        hideAllSteps() // hide every step first
        showTrackById(recommendationArray[arrayIndex].track_id)
    }
    else if (currentStep == 2) {
        hideAllSteps() // hide every step first
        // initialize current track
        $.ajax({
            url: 'https://api.spotify.com/v1/tracks/' + recommendationArray[arrayIndex].track_id,
            headers: {
                'Authorization': 'Bearer ' + access_token
            },
            success: function (response) {
                $("#img").attr("src", response.album.images[0].url);
                $("#player").html('')
                $("#player").html("<audio controls src=" + response.preview_url + " class='embed-responsive-item'>  <source> </audio>")
                $("#trackId").text(response.id)
                $("#trackName").text(response.name)
                $("#artistName").text(response.artists[0].name)
                for (let index = 0; index < 4; index++) {
                    let score = recommendationArray[arrayIndex]["bot" + index + "_a"]
                    if (score == 1) {
                        $("#userAnswer" + (index + 1)).html(noButtonHTML(false))
                    }
                    else if (score == 2) {
                        $("#userAnswer" + (index + 1)).html(maybeNoButtonHTML(false))
                    }
                    else if (score == 3) {
                        $("#userAnswer" + (index + 1)).html(maybeYesButtonHTML(false))
                    }
                    else if (score == 4) {
                        $("#userAnswer" + (index + 1)).html(yesButtonHTML(false))
                    }
                }
                $("#playlist").show();
                $("#step2").show();
            }
        })
    }
    else if (currentStep == 3) {
        hideAllSteps() // hide every step first
        $.ajax({
            url: 'https://api.spotify.com/v1/tracks/' + recommendationArray[arrayIndex].track_id,
            headers: {
                'Authorization': 'Bearer ' + access_token
            },
            success: function (response) {
                let shouldAdd = false
                if (currentScore == 3 || currentScore == 4) {
                    shouldAdd = true
                }
                for (let index = 0; index < 4; index++) {
                    if (recommendationArray[arrayIndex]["bot" + index + "_b"] == 4) {
                        $("#userFinalAnswer" + (index + 1)).html(yesButtonHTML(true))
                    }
                    else if (recommendationArray[arrayIndex]["bot" + index + "_b"] == 3) {
                        $("#userFinalAnswer" + (index + 1)).html(maybeYesButtonHTML(true))
                    }
                    else if (recommendationArray[arrayIndex]["bot" + index + "_b"] == 1) {
                        shouldAdd = false
                        $("#userFinalAnswer" + (index + 1)).html(noButtonHTML(true))
                    }
                    else if (recommendationArray[arrayIndex]["bot" + index + "_b"] == 2) {
                        shouldAdd = false
                        $("#userFinalAnswer" + (index + 1)).html(maybeNoButtonHTML(true))
                    }
                    $("#userName" + (index + 1)).html(randomName[index])
                }

                if (shouldAdd) {
                    $("#statusAlert").html(addedPlaylistAlert(response.name, response.artists[0].name));
                }
                else {
                    $("#statusAlert").html(notAddedPlaylistAlert(response.name, response.artists[0].name));
                }

                if (currentScore == 3) {
                    $("#yourAnswerBtn").html(maybeYesButtonHTML(true));
                }
                else if (currentScore == 4) {
                    $("#yourAnswerBtn").html(yesButtonHTML(true));
                }
                else if (currentScore == 2) {
                    $("#yourAnswerBtn").html(maybeNoButtonHTML(true));
                }
                else {
                    $("#yourAnswerBtn").html(noButtonHTML(true));
                }
                if (playlist.length == PLAYLIST_MAX) {
                    $("#nextStep3").html('Do surveys');
                    $("#addUserPlaylist").show();
                }
                $("#playlist").show();
                $("#step3").show();
            }
        })

    }
    else if (currentStep == 4) {
        hideAllSteps() // hide every step first
        $("#step4").show();
    }


    function knowArtist(answer) {
        recommendationArray[arrayIndex].know_artist = answer
        if (answer == 1) {
            $("#artistYes").addClass("active", true);
            $("#artistNo").removeClass("active");
        } else {
            $("#artistNo").addClass("active", true);
            $("#artistYes").removeClass("active");
        }
    }

    function knowSong(answer) {
        recommendationArray[arrayIndex].know_song = answer
        if (answer == 1) {
            $("#songYes").addClass("active", true);
            $("#songNo").removeClass("active");
        } else {
            $("#songNo").addClass("active", true);
            $("#songYes").removeClass("active");
        }
    }

    function isCompletedStep1() {
        let answerCount = 0
        if ($("#songYes").hasClass("active")) {
            answerCount++
        }
        if ($("#songNo").hasClass("active")) {
            answerCount++
        }
        if ($("#artistYes").hasClass("active")) {
            answerCount++
        }
        if ($("#artistNo").hasClass("active")) {
            answerCount++
        }
        if ($("#answer1").hasClass("active")) {
            answerCount++
        }
        if ($("#answer2").hasClass("active")) {
            answerCount++
        }
        if ($("#answer3").hasClass("active")) {
            answerCount++
        }
        if ($("#answer4").hasClass("active")) {
            answerCount++
        }
        if (answerCount == 3) {
            return true
        }
        else {
            return false
        }
    }

    function isCompletedStep2() {
        let answerCount = 0
        if ($("#repeatAnswer1").hasClass("active")) {
            answerCount++
        }
        if ($("#repeatAnswer2").hasClass("active")) {
            answerCount++
        }
        if ($("#repeatAnswer3").hasClass("active")) {
            answerCount++
        }
        if ($("#repeatAnswer4").hasClass("active")) {
            answerCount++
        }
        if (answerCount == 1) {
            return true
        }
        else {
            return false
        }
    }

    function vote(score) {
        currentScore = score
        recommendationArray[arrayIndex].answer_a = currentScore
        if (score == 4) {
            $("#answer4").addClass("active", true);
            $("#answer3").removeClass("active");
            $("#answer2").removeClass("active");
            $("#answer1").removeClass("active");
        }
        else if (score == 3) {
            $("#answer3").addClass("active", true);
            $("#answer4").removeClass("active");
            $("#answer2").removeClass("active");
            $("#answer1").removeClass("active");
        }
        else if (score == 2) {
            $("#answer2").addClass("active", true);
            $("#answer4").removeClass("active");
            $("#answer3").removeClass("active");
            $("#answer1").removeClass("active");
        }
        else {
            $("#answer1").addClass("active", true);
            $("#answer4").removeClass("active");
            $("#answer3").removeClass("active");
            $("#answer2").removeClass("active");
        }
    }

    function finalVote(score) {
        currentScore = score
        recommendationArray[arrayIndex].answer_b = currentScore
        if (score == 4) {
            $("#repeatAnswer4").addClass("active", true);
            $("#repeatAnswer3").removeClass("active");
            $("#repeatAnswer2").removeClass("active");
            $("#repeatAnswer1").removeClass("active");
        }
        else if (score == 3) {
            $("#repeatAnswer3").addClass("active", true);
            $("#repeatAnswer4").removeClass("active");
            $("#repeatAnswer2").removeClass("active");
            $("#repeatAnswer1").removeClass("active");
        }
        else if (score == 2) {
            $("#repeatAnswer2").addClass("active", true);
            $("#repeatAnswer4").removeClass("active");
            $("#repeatAnswer3").removeClass("active");
            $("#repeatAnswer1").removeClass("active");
        }
        else {
            $("#repeatAnswer1").addClass("active", true);
            $("#repeatAnswer4").removeClass("active");
            $("#repeatAnswer3").removeClass("active");
            $("#repeatAnswer2").removeClass("active");
        }
    }

    function showLoading(text) {
        $("#loading").show()
        $("#loading").html(loadingHTML(text));
    }

    function showAnonymousUser() {
        // if user's answer is NO or MAYBE NO
        if (currentScore == 1 || currentScore == 2)
            for (let index = 0; index < 4; index++) {
                // set dummy answer
                let random = Math.random();
                if (random <= 0.1) {
                    $("#userAnswer" + (index + 1)).html(maybeNoButtonHTML(false))
                    recommendationArray[arrayIndex]["bot" + index + "_a"] = 2
                }
                else if (random <= 0.1) {
                    $("#userAnswer" + (index + 1)).html(noButtonHTML(false))
                    recommendationArray[arrayIndex]["bot" + index + "_a"] = 1
                }
                else if (random <= 0.1) {
                    $("#userAnswer" + (index + 1)).html(maybeYesButtonHTML(false))
                    recommendationArray[arrayIndex]["bot" + index + "_a"] = 3
                }
                else {
                    $("#userAnswer" + (index + 1)).html(yesButtonHTML(false))
                    recommendationArray[arrayIndex]["bot" + index + "_a"] = 4
                }
            }
        // if user's answer is YES or MAYBE YES
        else {
            for (let index = 0; index < 4; index++) {
                // set dummy answer
                let random = Math.random();
                if (random <= 0.1) {
                    recommendationArray[arrayIndex]["bot" + index + "_a"] = 3
                    $("#userAnswer" + (index + 1)).html(maybeYesButtonHTML(false))
                }
                else if (random <= 0.3) {
                    recommendationArray[arrayIndex]["bot" + index + "_a"] = 4
                    $("#userAnswer" + (index + 1)).html(yesButtonHTML(false))
                }
                else if (random <= 0.6) {
                    recommendationArray[arrayIndex]["bot" + index + "_a"] = 2
                    $("#userAnswer" + (index + 1)).html(maybeNoButtonHTML(false))
                }
                else {
                    recommendationArray[arrayIndex]["bot" + index + "_a"] = 1
                    $("#userAnswer" + (index + 1)).html(noButtonHTML(false))
                }
            }
        }
        $("#loading").hide();
        $("#playlist").show();
        $("#step2").show();
        currentStep++
    }

    function showResult() {
        // add the track to playlist if user's answer is YES or MAYBE YES
        let shouldAdd = false
        if (currentScore == 3 || currentScore == 4) {
            shouldAdd = true
        }
        shuffle(randomName)
        for (let index = 0; index < 4; index++) {
            let random = Math.random();
            if (recommendationArray[arrayIndex]["bot" + index + "_a"] == 3 || recommendationArray[arrayIndex]["bot" + index + "_a"] == 4) {
                if (random >= 0.5) {
                    recommendationArray[arrayIndex]["bot" + index + "_b"] = 4
                    $("#userFinalAnswer" + (index + 1)).html(yesButtonHTML(true))
                }
                else {
                    recommendationArray[arrayIndex]["bot" + index + "_b"] = 3
                    $("#userFinalAnswer" + (index + 1)).html(maybeYesButtonHTML(true))
                }
            }
            else {
                shouldAdd = false
                if (random >= 0.5) {
                    recommendationArray[arrayIndex]["bot" + index + "_b"] = 1
                    $("#userFinalAnswer" + (index + 1)).html(noButtonHTML(true))
                }
                else {
                    recommendationArray[arrayIndex]["bot" + index + "_b"] = 2
                    $("#userFinalAnswer" + (index + 1)).html(maybeNoButtonHTML(true))
                }
            }
            // set name of dummy user
            $("#userName" + (index + 1)).html(randomName[index])
        }
        let trackId = $("#trackId").text()
        let artistName = $("#artistName").text()
        let trackName = $("#trackName").text()
        if (shouldAdd) {
            addPlaylist(trackId, trackName, artistName)
            $("#statusAlert").html(addedPlaylistAlert(trackName, artistName));
        }
        else {
            $("#statusAlert").html(notAddedPlaylistAlert(trackName, artistName));
        }

        if (currentScore == 3) {
            yesAnswerCount++
            $("#yourAnswerBtn").html(maybeYesButtonHTML(true));
        }
        else if (currentScore == 4) {
            yesAnswerCount++
            $("#yourAnswerBtn").html(yesButtonHTML(true));
        }
        else if (currentScore == 2) {
            noAnswerCount++
            $("#yourAnswerBtn").html(maybeNoButtonHTML(true));
        }
        else {
            noAnswerCount++
            $("#yourAnswerBtn").html(noButtonHTML(true));
        }

        if (playlist.length == PLAYLIST_MAX) {
            $("#nextStep3").html('Do surveys');
            $("#addUserPlaylist").show();
        }
        $("#loading").hide();
        $("#playlist").show();
        $("#step3").show();
        currentStep++

        recommendationArray[arrayIndex].endTime = new Date().getTime()
        postRecommendationData(arrayIndex) // send current recommendation data to server
    }

    function showGroupMembers() {
        $("#loading").hide();
        $("#step0").show();
    }
    function nextStep() {
        if (currentStep == 0) {
            currentStep++
            hideAllSteps() // hide every step first
            // generate a random boolean, [0, 0.5) is starting from randomTracks25, [0.5, 1) is starting from randomTracks75.
            let random = Math.random();
            if (random >= 0.5) {
                console.log(75)
                startRandomFrom = '75'
                randomTrackId = randomTracks75.pop()
                recommendationArray[arrayIndex].list = 75
            }
            else {
                console.log(25)
                startRandomFrom = '25'
                randomTrackId = randomTracks25.pop()
                recommendationArray[arrayIndex].list = 25
            }
            recommendationArray[arrayIndex].startTime = new Date().getTime()
            // display initial track
            showTrackById(randomTrackId)
        }
        else if (currentStep == 1) {
            if (isCompletedStep1()) {
                hideAllSteps() // hide every step first
                showLoading("Gathering all responses")
                let min = 2,
                    max = 5;
                // generate Random number between 5-10
                let rand = Math.floor(Math.random() * (max - min + 1) + min);
                recommendationArray[arrayIndex].waiting_a = rand
                setTimeout(showAnonymousUser, rand * 1000);
                //currentStep++
            }
            else {
                $('#alertModel').modal('show')
            }
        }
        else if (currentStep == 2) {
            if (isCompletedStep2()) {
                hideAllSteps() // hide every step first
                showLoading("Gathering all responses")
                let min = 2,
                    max = 5;
                // generate Random number between 5-10
                let rand = Math.floor(Math.random() * (max - min + 1) + min);
                recommendationArray[arrayIndex].waiting_b = rand
                setTimeout(showResult, rand * 1000);
                //currentStep++
            }
            else {
                $('#alertModel').modal('show')
            }
        }
        else if (currentStep == 3) {
            hideAllSteps() // hide every step first
            arrayIndex++ // move cursor to next song index
            recommendationArray[arrayIndex] = {} // initialize song recommendation object
            if (playlist.length >= PLAYLIST_MAX) {
                // do the survey
                hideAllSteps() // hide every step first
                currentStep = 4
                $("#step4").show();
            } else {
                recommendationArray[arrayIndex].startTime = new Date().getTime()
                if (startRandomFrom == '25') {
                    if (noAnswerCount >= 5) {
                        recommendationArray[arrayIndex].list = 75
                        noAnswerCount = 0
                        yesAnswerCount = 0
                        startRandomFrom = '75'
                        showTrackById(randomTracks75.pop())
                    }
                    else {
                        recommendationArray[arrayIndex].list = 25
                        showTrackById(randomTracks25.pop())
                    }
                }
                else {
                    if (yesAnswerCount >= 5) {
                        recommendationArray[arrayIndex].list = 25
                        noAnswerCount = 0
                        yesAnswerCount = 0
                        startRandomFrom = '25'
                        showTrackById(randomTracks25.pop())
                    }
                    else {
                        recommendationArray[arrayIndex].list = 75
                        showTrackById(randomTracks75.pop())
                    }
                }
            }
        }
    }

    function validateForm(showError = true) {
        let forms = []
        let isValid = true
        let errors = []
        for (let questionIndex = 1; questionIndex <= 29; questionIndex++) {
            if (document.forms["formQuestion"]["q_" + questionIndex].value == "") {
                let questionText = $("#questionText_" + questionIndex).text()
                errors.push(questionText)
                isValid = false
            }
        }
        if (!isValid) {
            $("#wariningText").html(errors.join('<br>'))
            if (showError)
                $('#alertModel').modal('show')
            return false
        }
        else
            return true
    }

    function hideAllSteps() {
        $("#step0").hide();
        $("#step1").hide();
        $("#step2").hide();
        $("#step3").hide();
        $("#step4").hide();
        $("#playlist").hide();
    }

    function postRecommendationData(index) {
        $.ajax({
            type: 'POST',
            data: JSON.stringify(recommendationArray[index]),
            contentType: 'application/json',
            url: '/recommendation'
        });
    }

    function addPlaylist(trackId, trackName, artistName) {
        playlist.push({
            trackId,
            trackName,
            artistName
        })
        for (let index = 0; index < playlist.length; index++) {
            $("#track" + (index + 1)).html(`<span>${index + 1}. </span><a class="text-success">${playlist[index].trackName}</a><footer class="blockquote-footer"> ${playlist[index].artistName}</footer>`)
        }
    }

    function noButtonHTML(isActive) {
        return `<button class="${isActive ? 'active' : 'focus'} btn btn-outline-danger"><i class="far fa-frown fa-lg"></i> No </button>`
    }

    function maybeNoButtonHTML(isActive) {
        return `<button class="${isActive ? 'active' : 'focus'} btn btn-outline-secondary"><i class="far fa-meh fa-lg"></i> Maybe No </button>`
    }
    function yesButtonHTML(isActive) {
        return `<button class="${isActive ? 'active' : 'focus'} btn btn-outline-success"><i class="far fa-laugh-beam fa-lg"></i> Yes </button>`
    }
    function maybeYesButtonHTML(isActive) {
        return `<button class="${isActive ? 'active' : 'focus'} btn btn-outline-info"><i class="far fa-smile-wink fa-lg"></i> Maybe Yes </button>`
    }
    function addedPlaylistAlert(trackName, artistName) {
        return `<div class="alert alert-success lead" role="alert">
                                    Congrats! An unanimous decision has been reached! <a class="alert-link lead">${trackName}</a> by <a class="alert-link lead">${artistName}</a> is added to the playlist.
                                </div>`
    }

    function notAddedPlaylistAlert(trackName, artistName) {
        return `<div class="alert alert-danger lead" role="alert">
                                    Not everybody agreed on this song. Hence, <a class="alert-link">${trackName}</a> by <a class="alert-link lead">${artistName}</a> is not added to the playlist.
                                </div>`
    }

    function loadingHTML(text) {
        return `<div class="text-success">
            <div class="spinner-grow" style="width: 4rem; height: 4rem;" role="status">
            </div>
        </div>
        <div class="lead">${text}</div>`
    }

    function showSavePlaylist() {
        $("#saveButton").removeClass("btn-secondary").addClass("btn-success");
        $("#saveButtonText").html("Save");
        $("#saveButton").attr("disabled", false);
        $('#exampleModalCenter').modal('show')
    }

    function addUserPlaylist() {
        let playlistName = $("#playlistName")[0].value
        let playlistDescription = $("#playlistDescription")[0].value
        let playlistPublic = $("#playlistPublic")[0].value
        if (playlistName == "") {
            $("#playlistName").addClass("is-invalid");
            $.ajax({
                type: 'POST',
                url: 'https://api.spotify.com/v1/users/' + user_id + '/playlists',
                headers: {
                    'Authorization': 'Bearer ' + access_token
                },
                contentType: 'application/json',
                data: JSON.stringify({
                    name: playlistName,
                    description: playlistDescription,
                    public: playlistPublic == "on" ? true : false
                }),
                success: function (response) {
                    console.log(response)
                }
            })
        }
        else {
            $("#saveButton").attr("disabled", true);
            $("#savePlaylistLoading").show();
            $.ajax({
                type: 'POST',
                url: 'https://api.spotify.com/v1/users/' + user_id + '/playlists',
                headers: {
                    'Authorization': 'Bearer ' + access_token
                },
                contentType: 'application/json',
                data: JSON.stringify({
                    name: playlistName,
                    description: playlistDescription,
                    public: playlistPublic == "on" ? true : false
                }),
                success: function (response) {
                    let playlist_Id = response.id
                    console.log(response)
                    console.log(response.id)

                    let requestBody = ""
                    for (let index = 0; index < playlist.length; index++) {
                        let track_id = "spotify:track:" + playlist[index].trackId
                        if (index == playlist.length - 1)
                            requestBody += track_id
                        else
                            requestBody += track_id + ","
                    }
                    $.ajax({
                        type: 'POST',
                        url: 'https://api.spotify.com/v1/playlists/' + playlist_Id + '/tracks?uris=' + requestBody,
                        headers: {
                            'Authorization': 'Bearer ' + access_token
                        },
                        contentType: 'application/json',
                        success: function (response) {
                            $("#saveButton").attr("disabled", true);
                            $("#saveButton").removeClass("btn-success").addClass("btn-secondary");
                            $("#saveButtonText").html("Saved!");
                            $("#savePlaylistLoading").hide();
                        }
                    })
                }
            })

        }
    }
</script>

<style>
    .list-group-item.active {
        background-color: #1DB954;
        border-color: #1DB954;
        color: white;
        font-weight: bold
    }
</style>